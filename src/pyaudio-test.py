import numpy as np
import pyaudio

# initialize audio steam constants
CHUNK = 1024                # how many audio samples to use per buffer
FORMAT = pyaudio.paFloat32  # capture samples as 32-bit floats
CHANNELS = 1                # mono audio (instead of 2-channel stereo)
RATE = 44100                # 44100 Hz sample rate

p = pyaudio.PyAudio()

stream = p.open(
        format=FORMAT,
        channels=CHANNELS,
        rate=RATE,
        input=True,
        frames_per_buffer=CHUNK)

stream.start_stream()

# Read in a few buffers of audio data and print output to the console,
# just to see if your Python is capturing your microphone signal.
# Sample output below.
buffers_to_read = 5
for b in range(buffers_to_read):
    try:
        data = stream.read(CHUNK, exception_on_overflow=False)
        data_float32 = np.frombuffer(data, dtype=np.float32)

        print("Buffer number: {}".format(b))
        print("Byte data:\n {}".format(data))
        print("Converted to float32:\n {}".format(data_float32))
        print()

    except KeyboardInterrupt:
        stream.stop_stream()
        stream.close()
        p.terminate()
        print("Exiting")


# SAMPLE OUTPUT
# --------------------------------------------- #
# Any non-zero output is good, see for example buffers 1 and 2 below.
# The first (or zero-th) buffer might have no signal, since the program is still initializing.

# Buffer number: 0
# Byte data:
#  b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x
# Converted to float32:
#  [0.         0.         0.         ... 0.01063012 0.01102945 0.01126467]
 
# Buffer number: 1
# Byte data:
#  b'/\x05;<V\x94=<p\xaa@<\x90\x8fD<2\xeeG<P\x7fI<\x8e\x9cH<\xcc\x7fD<?O;<\xb4\xb1-<\x8d\xdb\x1d<\xcd\xb1\n<\xec\x96\xea;\x90\r\xbe;\x84\xbd\x92;\xe1\xc6V;\x1e\x0b\r;1\xd6\x95:0p\\92\xd3?\xba\xd5\xc4\xd9\xba|\xf6,\xbb\xf8\xc6p\xbb\x06E\x96\xbbf\xb6\xae\xbb\xbc!\xc1\xbbk\x82\xca\xbb\xcf\x86\xcc\xbb\x8a\x93\xc6\xbbe\xdf\xbb\xbb\xd7\x85\xb0\xbb\xf1O\xa3\xbbD\x8f\x95\xbb!\xab\x87\xbb\xaa\x1bq\xbbDjL\xbb\x9a\xee\x1e\xbb\xf8\x9d\xd3\xbaL\xe5(\xba\x0c\x15\x02:s\x1d\xe2:\xb7\x1fH;/\x88\x90;\x9em\xb8;\xe2\xf5\xd9;\x1c\xfd\xf2;\xc3\xa6\x02<\x84\x0f\t<\x7f\'\r<\xec\xb8\x10<\xf3\x10\x14<\xd8\x16\x17<\xd8q\x18<\xa9r\x18<\xa9\xef\x15<\x1d7\x10<\x8a\xdd\x08<\xf6\x01\xfd;\xacb\xe6;\x81\x87\xce;t\x9f\xb2;8P\x96;\xfb$q;\xc9\xcf3;6o\xef:\x19\xe6r:&B\xdc5M\xd9\x84\xba\xb4\x89\n\xbbZ\xaaY\xbb\x1en\x96\xbb\x93\xda\xbe\xbbi?\xe4\xbb\x85\xb8\x01\xbcp:\r\xbc\xc8\xfd\x15\xbc\xb0\xfd\x1c\xbc\x99\x82"\xbc\xcf\x03\'\xbc\xef\xce)\xbc\xe0\x97*\xbc\xcb}*\xbc\xa3&*\xbcA\xb6(\xbc\x1b\x81\'\xbc\n\xdd&\xbc\xa2[$\xbc\x115\x1f\xbc\x87:\x17\xbcK\
# Converted to float32:
#  [0.01141481 0.01157101 0.01175939 ... 0.01600504 0.0177972  0.01964876]
 
# Buffer number: 2
# Byte data:
#  b'\xf3\xa3\xaf<\x82\xda\xbb<\xa1R\xc4<\xc65\xc7<p \xc4<DH\xbc<\x8a\x9a\xb0<\x8e(\xa2<^\r\x91<,\xa9y<q;K<\xe63\x18<\x94\x9a\xc3;\x98\xb9!;1\xfa\x85\xbaL\x17\x92\xbbY4\x02\xbc/\xad;\xbc\xe5\xd3u\xbc\x89\xc1\x97\xbc\x8b\x9d\xb2\xbc\x08]\xca\xbc\xe7\x96\xde\xbc\xe85\xef\xbcU\xb9\xfd\xbc&\x83\x05\xbd\xc2\x9c\x0b\xbdHn\x11\xbdef\x16\xbd\x02\x1a\x1a\xbd-+\x1c\xbd\x01\x97\x1c\xbd\x16\x89\x1b\xbd\xae\xeb\x18\xbd&\xf1\x14\xbdE\x7f\x0f\xbd\x87Y\x08\xbd\x8dh\xfe\xbcr\xe6\xe8\xbc\x1dY\xd1\xbc\x04\'\xb9\xbcf\x83\xa1\xbc\xdd\xf7\x89\xbc\x1a\x13f\xbc\x04j:\xbcn\x8b\x0e\xbcw\x13\xc7\xbbR\xaem\xbbI3\xa9\xba\x0c%Q:R\xe3/;\xab\xc5\x92;2"\xcc;\xd1\x9f\x03<\xc5\xa7\x1f<\x13\x088<~\x98J<\xc5\xb4V<\xdc\xce]<\xd9\xb4`<K\xa6`<<\xe2^<?;Z<A\xd2P<N\xf3C<\xaa.3<\xf2q\x1f</%\x0c<\x85\xdf\xf1;\xd0\xfe\xca;g\xa2\xa2;U\xa0l;B?\x0f;\x10\xeb[:\xbcV\xa7\xb9\xee\xbb\x9c\xba\x8b\xd3\xe9\xba<W\x11\xbb\xf3\x18\'\xbb[GD\xbb\xc0\xc2l\xbb\x1b\xac\x8b\xbbs\xd3\xa2\xbb\x901\xb7\xbb{*\xc6\xbbM>\xd1\xbb\xba\x82\xd9\xbb\x07\xe6\xde\xbb\x12\xdc\xde\xbb^A
# Converted to float32:
#  [0.02144048 0.02293134 0.02396518 ... 0.0041798  0.0045396  0.00489542]
